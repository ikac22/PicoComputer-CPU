-- Copyright (C) 1991-2013 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.

-- Quartus II generated Memory Initialization File (.mif)

WIDTH=16;
DEPTH=64;

ADDRESS_RADIX=UNS;
DATA_RADIX=HEX;

CONTENT BEGIN
------------- PROGRAM 1 ---------------------
	[0..7]:		0000;
	8:   		7101;	-- IN A				A = 8
	9:			8101;	-- OUT A			8
	10:			0210;	-- MOV B, A			B = 8
	11:			1312;	-- ADD C, A, B		C = 8 + 8 = 16
	12:			8301;	-- OUT C			16
	13:			7401;	-- IN D				D = 9
	14:			2334;	-- SUB C, C, D		C = 16 - 9 = 7
	15:			0530;	-- MOV E, C			E = 7
	16:			8501;	-- OUT E			7
	17:			7301;	-- IN C				C = 3
	18:			3553;	-- MUL E, E, C		E = 7 * 3 = 21
	19:			8501;	-- OUT E			14
	20:			F000;	-- STOP
    [21..63]:	0000;
------------- PROGRAM 2 ---------------------
--	[0..7]:		0000;
--	8: 			0508; -- 8   | 03    | MOV R5, #1        | R5 = 1                | R5 = 1
--	9: 			0001; -- 9 
--	10: 		7D01; -- 10  | 11 08 | IN [R5]           | MEM[R5] = stdin(8)    | R1 = 8 
--	11: 		8101; -- 11  | 20    | OUT R1            | stdout = R1           | 8
--	12: 		0210; -- 12  | 00    | MOV R2, R1        | R2 = R1               | R2 = 8
--	13: 		1312; -- 13  | 30    | ADD R3, R1, R2    | R3 = R1 + R2          | R3 = 8 + 8 = 16
--	14: 		8301; -- 14  | 20    | OUT R3            | stdout = R3           | 16
--	15: 		7401; -- 15  | 10 08 | IN  R4            | R4 = stdin(8)         | R4 = 8
--	16: 		2334; -- 16  | 30    | SUB R3, R3, R4    | R3 = R3 - R4          | R3 = 16 - 8 = 8
--	17: 		0530; -- 17  | 00    | MOV R5, R3        | R5 = R3               | R5 = 8
--	18: 		8501; -- 18  | 20    | OUT R5            | stdout = R5           | 8
--	19: 		7301; -- 19  | 10 08 | IN  R3            | R3 = stdin(3)         | R3 = 8
--	20: 		3553; -- 20  | 30    | MUL R5, R5, R3    | R5 = R3 * R5          | R5 = 8 * 3 = 24
--	21: 		8501; -- 21  | 20    | OUT R5            | stdout = R5           | 24
--	22:			9015;
--	23:			A005;
--	24: 		F905; -- 22  | 40    | STOP R1, R5		 | stdout = R1, stdout R5| 8, 24
--	[25..63]:	0000;
-------------- PROGRAM MODIF -----------------
--	0:			0001;
--	1:			0002;
--	2:			0003;
--	3:			0004;
--	4:			0000;
--	5:			0000;
--	6:			0000;
--	7:			0000;
--	8:			9404;
--	9:			A404;
--	10: 		F000;
--	[11..63]:	0000;

END;
